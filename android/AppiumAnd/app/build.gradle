plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'cn.six.appium.and'
    compileSdk 36

    defaultConfig {
        applicationId "cn.six.appium.and"
        minSdk 24
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    // implementation 'com.foursquare:movementsdk:4.0.0' //仍是targetSDK=22, minSDK=15

    // kotlin = 1.9后, core-ktx也可以升级到最高的1.13.1了 (发布于2024-05-01)
    implementation 'androidx.core:core-ktx:1.15.0'
    //targetSDK = 35后, 最新仍1.7.0
    implementation 'androidx.appcompat:appcompat:1.7.0'
    // targetSDK = 35后, 升至最新的1.12.0    // 再也没这个编译错误了: "Can't determine type for tag '<macro name="m3_comp_assist_chip_container_shape">?attr/shapeAppearanceCornerSmall</macro>'"
    implementation 'com.google.android.material:material:1.12.0'

    // targetSDK = 35后, 可以升到最新的1.0.1与1.8.6了
    implementation "androidx.activity:activity-ktx:1.10.1"
    implementation "androidx.fragment:fragment-ktx:1.8.6"

    // targetSDK = 35后, 升到了最高的2.8.7
    def lifecycle_version = "2.8.7"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // savedStateHandler (process dies and restarts时保存与恢复state)
    implementation "androidx.savedstate:savedstate-ktx:1.3.0"

    // UI (升到targetSDk = 35后, 下面各个androidx库仍是最新的, 不用更新)
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation "androidx.recyclerview:recyclerview:1.4.0"
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"
    implementation "androidx.viewpager2:viewpager2:1.1.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.draganddrop:draganddrop:1.0.0"

    implementation "androidx.graphics:graphics-core:1.0.0"
    implementation "androidx.graphics:graphics-path:1.0.1"
    implementation "androidx.graphics:graphics-shapes:1.0.0"

    implementation 'com.airbnb.android:lottie:5.2.0'

    implementation "com.github.skydoves:balloon:1.4.7" // 1.4.8+版本就要使用compileSDK 32了

    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    implementation 'jp.wasabeef:blurry:4.0.1'  // 图片毛玻璃化(blur)
    implementation "io.github.limuyang2:renderscrip-toolkit:1.0.2" //原来的renderScript已经过时, 这是基于http://github.com/android/renderscript-intrinsics-replacement-toolkit来编译好的aar包. 本aar包只有675KB, 十分小哦.

    // Coil (load image, including gif and svg; support preloading images)
    // 这是自己用来做实验的, 所以除了Glide, 还留有Coil库. 正常工程Glide, Coil二选一即可.
    def coilVersion = "3.2.0"
    implementation "io.coil-kt.coil3:coil:$coilVersion"
    implementation "io.coil-kt.coil3:coil-network-okhttp:$coilVersion" //coil3网络层分层了, 可以用okhttp, 或ktor2, 或ktor3, 所以这里要显示说明用了哪个
    implementation "io.coil-kt.coil3:coil-svg:$coilVersion"
    implementation "io.coil-kt.coil3:coil-gif:$coilVersion"

    //Glide (需要和c51保持一致)
    implementation "com.github.bumptech.glide:glide:4.11.0"
    ksp "com.github.bumptech.glide:compiler:4.11.0"

    // DI
    def koinVersion = "3.1.5"
    implementation "io.insert-koin:koin-core:$koinVersion"
    implementation "io.insert-koin:koin-android:$koinVersion"
    implementation "io.insert-koin:koin-android-compat:$koinVersion"

    // Rx
    implementation "io.reactivex.rxjava3:rxjava:3.1.2"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"
    implementation 'com.jakewharton.rxbinding4:rxbinding:4.0.0'

    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.retrofit2:converter-scalars:2.9.0"
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'

    // Database
    def room_version = "2.5.2" // from 2.2.5   // to 2.5.2
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version" // RxJava3 support
//    kapt "androidx.room:room-compiler:$room_version" // https://developer.android.com/studio/build/migrate-to-ksp
//    kapt "org.xerial:sqlite-jdbc:3.34.0" // Apple Chip need this library to build

    // media (from : https://developer.android.com/jetpack/androidx/releases/media3?hl=zh-cn)
    def media3_version = "1.5.1" // 1.6.0开始用了kotlin 2.0 , 所以现在只升到1.5.1就行
    implementation "androidx.media3:media3-exoplayer:$media3_version" // For media playback using ExoPlayer
    implementation "androidx.media3:media3-exoplayer-ima:$media3_version" // For ad insertion using the Interactive Media Ads SDK with ExoPlayer
    implementation "androidx.media3:media3-session:$media3_version" // For exposing and controlling media sessions
    implementation "androidx.media3:media3-ui:$media3_version" // For building media playback UIs

    // CameraX
    def cameraX = "1.3.4"
    implementation "androidx.camera:camera-camera2:$cameraX"
    implementation "androidx.camera:camera-lifecycle:$cameraX"
    implementation "androidx.camera:camera-view:$cameraX"
    implementation "androidx.camera:camera-extensions:$cameraX"

    // barcode scan (https://mvnrepository.com/artifact/com.google.mlkit/barcode-scanning)
    implementation 'com.google.mlkit:barcode-scanning:17.3.0'
    // document scan (https://developers.google.com/ml-kit/vision/doc-scanner)
    implementation 'com.google.android.gms:play-services-mlkit-document-scanner:16.0.0-beta1'

    // PDF (竟然要求minSDK >= 35, 完全用不了)
//    def pdf = "1.0.0-alpha02"
//    implementation "androidx.pdf:pdf-viewer:$pdf"
//    implementation "androidx.pdf:pdf-viewer-fragment:$pdf"

    // map
    implementation 'org.osmdroid:osmdroid-android:6.1.20'

    // security
    implementation "androidx.biometric:biometric:1.1.0"

    // html, markdown
    implementation "org.markdownj:markdownj-core:0.4" //把markdown转成html string

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}